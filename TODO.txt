==================================
// SHORT TERM OBJECTIVES
==================================
--> Make 'ShaderManager' class to provide global clean access to shaders.
--> Make 'LogManager' class to provide global clean access to logging: OK.
	-> !TODO: flags (debug, info, etc)
	-> TODO: multiple 'sinks': file, stdout, etc, using derived classes.
--> Make 'FontManager' class to deal with equal fonts in the GUI and such.
--> Make 'TextureManager' class to deal with textures nicely.
--> Wrap OpenGL calls in logical objects (rectangle -> triangle, e.g).
==================================
// IDEAS/FUTURE
==================================
--> GUI
    -> The components MUST NOT know how to draw themselves.
    -> In the draw func, all components will be looped and their geometry
       packed in the tightest way possible, and least amount of calls.
    -> ---
    -> Or at least, try to pack similar objects in continuous memory,
       to call equal shaders just once (buttons will be drawn with the same shader,
       so draw all buttons with a single call to use button shader).
--> LUA: yeh. Do that somehow.
--> Ask http://thehitgame.co.uk/ how does he handle the phone-rendering camera.
